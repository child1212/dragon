syntax = "proto2";

package com.common.msg;

import "ItemModuleMsg.proto";
import "ActivityModuleMsg.proto";

enum ActivityDragonExploitModuleMsgSubCommand {
	//获取龙PVE活动信息
	ACTIVITYDRAGONEXPLOITMODULEMSG_SUB_ACTIVITYDRAGONEXPLOITINFO = 26901;
	// 开始冒险
	ACTIVITYDRAGONEXPLOITMODULEMSG_SUB_ACTIVITYDRAGONEXPLOITSTARTADV = 26902;
	// 结算冒险
	ACTIVITYDRAGONEXPLOITMODULEMSG_SUB_ACTIVITYDRAGONEXPLOITFINISHADV = 26903;
	// 排行榜奖励领取请求
	ACTIVITYDRAGONEXPLOITMODULEMSG_SUB_ACTIVITYDRAGONEXPLOITRANKREWARD = 26904;
	// 阶段累计奖励领取请求
	ACTIVITYDRAGONEXPLOITMODULEMSG_SUB_ACTIVITYDRAGONEXPLOITSCOREREWARD = 26905;
}

// 获取龙PVE活动信息请求
message ActivityDragonExploitInfoRequest {
	//活动id
	optional string activityId = 1;
}

//获取龙PVE活动信息响应
message ActivityDragonExploitInfoResponse {
	// 今日已冒险次数(0 1 2 3)
	optional int32 advCnt = 1;
	// 进入活动时的等级
	optional int32 enterLevel = 2;
	// 上次领取的阶段奖励
	optional string lastScoreReward = 3;
	// 上次龙冒险时间戳(数值为0代表活动开启后没有冒险)
	optional int64 lastAdvTime = 4;
	// 消耗体力值
	optional int32 consumeEnergy = 5;
	// 当前门票(>0时cd倒计时无效, ==0时计算倒计时, ticket从1到0即进入倒计时)
	optional int32 ticket = 6;
	// 本次兑换的门票
	optional int32 convertTicket = 7;
}

// 开始冒险请求
message ActivityDragonExploitStartAdvRequest {
	//活动id
	optional string activityId = 1;
	// 第几次冒险(1 2 3)
	optional int32 advCnt = 2;
	// 进入活动消耗数量,无消耗传0 (服务器用来判断数值是否一致 如果客户端消耗比服务器消耗值小 服务器会报错 参见ErrorCodeEnums.DRAGONPVE_ADV_COST_NUM_ERROR)
	optional int32 cost = 3;
}

// 开始冒险响应
message ActivityDragonExploitStartAdvResponse {
	// 今日已冒险次数(0 1 2 3)
	optional int32 advCnt = 1;
	// 消耗数量(免费情况 ID有值 数量为0)
	optional ItemMsg cost = 2;
	//冒险时间戳
	optional int64 advTime = 3;
}

// 结算冒险请求
message ActivityDragonExploitFinishAdvRequest {
	//活动id
	optional string activityId = 1;
}

// 结算冒险响应
message ActivityDragonExploitFinishAdvResponse {
	
}

// 排行榜奖励领取请求
message ActivityDragonExploitRankRewardRequest {
	// 活动id
	optional string activityId = 1;
}

// 排行榜奖励领取响应
message ActivityDragonExploitRankRewardResponse {
	// 奖励
	repeated RankRewardMsg rankRewards = 1;
}

// 阶段累计奖励领取请求
message ActivityDragonExploitScoreRewardRequest {
	// 活动id
	optional string activityId = 1;
	// 奖励id
	optional string rewardId = 2;
}

// 阶段累计奖励领取响应
message ActivityDragonExploitScoreRewardResponse {
	// 奖励道具
	repeated ItemMsg rewards = 2;
}