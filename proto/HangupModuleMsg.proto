syntax = "proto2";
package com.common.msg;
import "ItemModuleMsg.proto";
enum HangupModuleMsgSubCommand {
	//请求挂机奖励系统信息
	HANGUPMODULEMSG_SUB_HANGUPINFO = 28401;
	//请求开启挂机奖励建筑
	HANGUPMODULEMSG_SUB_OPENHANGUPBUILDING = 28402;
	//请求领取挂机建筑奖励(挂机奖励或升级奖励或两者之和)
	HANGUPMODULEMSG_SUB_TAKEHANGUPREWARD= 28403;
	//请求挂机建筑升级
	HANGUPMODULEMSG_SUB_HANGUPLEVELUP = 28405;
	//请求生产随机道具
	HANGUPMODULEMSG_SUB_RANDOMREWARDITEM = 28406;
}

// 请求挂机奖励系统信息
message HangUpInfoRequest {
	
}

message HangUpBuilding {
	//挂机建筑等级
	optional int32 level = 1;
	//挂机建筑开始挂机时间戳(此时间戳为上次领奖后的时间)
	optional int64 startTs = 2;
	//仅在建筑初始化或升级后有此奖励信息,有次奖励时无需计算挂机奖励(等级奖励 + 挂机奖励)
	repeated ItemMsg items = 3;
	//建筑的配置表
	optional string  templateId= 4;
	//挂机奖励3随机信息(在生产时间内随机的道具信息)
	repeated ItemMsg randomItemsFor3 = 5;
}

// 返回挂机奖励系统信息
message HangUpInfoResponse {
	//挂机建筑信息集合
	repeated HangUpBuilding buildings = 1;
}

//请求开启挂机奖励建筑
message OpenHangUpBuildingRequest {
	//建筑的配置表id
	optional string templateId = 1;
}

//返回开启挂机奖励建筑
message OpenHangUpBuildingResponse {
	//建筑信息
	optional HangUpBuilding building = 1;
}

//请求领取挂机建筑奖励(挂机奖励或升级奖励或两者之和)
message TakeHangUpRewardRequest {
	//建筑的配置表id
	optional string templateId = 1;
	//是否有广告
	optional bool ads = 2;
}

//请求领取挂机奖励返回挂(机奖励或升级奖励或两者之和)
message TakeHangUpRewardResponse {
	//挂机奖励道具
	repeated ItemMsg items = 1;
	//当前开启挂机时间
	optional int64 startTs = 2;
}

//请求挂机建筑升级
message HangUpLevelUpRequest {
	//建筑的配置表id
	optional string templateId = 1;
}

//挂机建筑升级响应
message HangUpLevelUpResponse {
	optional HangUpBuilding building = 1;
}

//请求生产随机道具
message RandomRewardItemRequest {
	//建筑的配置表id
	optional string templateId = 1;
}

//请求生产随机道具结果返回
message RandomRewardItemResponse {
	//本次的随机道具结果
	repeated ItemMsg randomItemsFro3 = 1;
}