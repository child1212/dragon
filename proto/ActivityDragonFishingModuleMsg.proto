syntax = "proto2";

package com.common.msg;

import "ItemModuleMsg.proto";
import "ActivityModuleMsg.proto";

enum ActivityDragonFishingModuleMsgSubCommand {
	// 获取钓鱼活动信息
	ACTIVITYDRAGONFISHINGMODULEMSG_SUB_FISHINGINFO = 28301;
	// 开始钓鱼
	ACTIVITYDRAGONFISHINGMODULEMSG_SUB_FISHINGSTART = 28302;
	// 钓鱼结算
	ACTIVITYDRAGONFISHINGMODULEMSG_SUB_FISHINGFINISH = 28303;
	// 鱼解锁
	ACTIVITYDRAGONFISHINGMODULEMSG_SUB_FISHUNLOCK = 28304;
	// 排行榜奖励领取请求
	ACTIVITYDRAGONFISHINGMODULEMSG_SUB_FISHINGRANKREWARD = 28305;
}

// 鱼解锁状态
message FishStatusMsg {
	// 鱼id
	optional string itemId = 1;
	// 状态 0:已获得 1:已解锁(已领取解锁奖励)
	optional int32 status = 2;
	// 历史最大重量 
	optional int32 maxWeight = 3;
}

// 鱼
message FishMsg {
	// 鱼id (ItemTemplateId)
	optional string itemId = 1;
	// 重量
	optional int32 weight = 2;
}

// 获取钓鱼活动信息请求
message FishingInfoRequest {
	//活动id
	optional string activityId = 1;
}

//获取钓鱼活动信息响应
message FishingInfoResponse {
	// 上次钓鱼时间戳(数值为0代表活动开启后没有钓过鱼)
	optional int64 lastFishingTime = 1;
	// 已解锁鱼状态
	repeated FishStatusMsg fishs = 2;
	// 进入本次活动时的等级
	optional int32 level = 3;
	// 最后领取的积分阶段奖励Id
	optional string lastRewardId = 4;
	// 消耗体力值
	optional int32 consumeEnergy = 5;
	// 当前门票(>0时cd倒计时无效, ==0时计算倒计时, ticket从1到0即进入倒计时)
	optional int32 ticket = 6;
	// 本次兑换的门票
	optional int32 convertTicket = 7;
}

// 开始钓鱼请求
message FishingStartRequest {
	// 活动id
	optional string activityId = 1;
	// 进入活动消耗数量,无消耗传0 (服务器用来判断数值是否一致 如果客户端消耗比服务器消耗值小)
	optional int32 cost = 2;
}

// 开始钓鱼响应
message FishingStartResponse {
	// 消耗数量(免费情况 ID有值 数量为0)
	optional ItemMsg cost = 1;
	// 上次钓鱼时间戳
	optional int64 lastFishingTime = 2;
}

// 龙掉到的鱼数据
message CreatureFishMsg {
	// 龙id
	optional int64 creatureId = 1;
	// 钓到的鱼
	repeated FishMsg fishs = 2;
}

// 钓鱼结算请求
message FishingFinishRequest {
	// 活动id
	optional string activityId = 1;
	// 龙掉到的鱼数据
	repeated CreatureFishMsg creatureFishs = 2;
	// 随机漂浮宝箱奖励
	repeated ItemMsg rewardItems = 3;
}

// 钓鱼结算响应
message FishingFinishResponse {
	//同步龙数据
	repeated MagicalCreatureMsg creatures = 1;
}

// 鱼解锁请求
message FishUnlockRequest {
	// 活动id
	optional string fishId = 1;
}

// 鱼解锁响应
message FishUnlockResponse {

}

// 排行榜奖励领取请求
message FishingRankRewardRequest {
	// 活动id
	optional string activityId = 1;
}

// 排行榜奖励领取请求
message FishingRankRewardResponse {
	// 奖励
	repeated RankRewardMsg rankRewards = 1;
}
