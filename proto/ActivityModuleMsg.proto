syntax = "proto2";
package com.common.msg;

import "ItemModuleMsg.proto";

enum ActivityModuleMsgSubCommand {
	// 请求活动列表信息
	ACTIVITYMODULEMSG_SUB_ACTIVITYLIST = 12001;
	// 请求活动倒计时结束
	ACTIVITYMODULEMSG_SUB_ACTIVITYCOUNTDOWNOVER = 12002;
	// 排行榜请求
	ACTIVITYMODULEMSG_SUB_ACTIVITYRANK = 12003;
}

// 排行信息
message RankMsg {
	// ID
	optional string playerId = 1;
	// 名字
	optional string name = 2;
	// 头像
	optional string avatar = 3;
	// 头像框
	optional string frame = 4;
	// 等级
	optional int32 level = 5;
	// 分数
	optional int32 score = 6;
	// 排名 (0:没有排名)
	optional int32 index = 7;
	// 上次排名 (0:没有排名)
	optional int32 lastIndex = 8;
	// 奖励状态 0:不可领取 1:已领取 2:可领取
	optional int32 rewardstate = 9;
	// 公会ID
	optional string teamId = 10;
	// 公会名字
	optional string teamname = 11;
	// 公会头像
	optional string teamicon = 12;
	// vip等级
	optional int32 vipLevel = 13;
}

// 排行榜信息
message RankListMsg {
	// 类型 1:龙PVE活动比赛排行榜 2:龙PVE活动世界排行榜 3:活动地图 4:跑酷比赛排行榜 5:跑酷世界排行榜
	optional int32 type = 1;
	// 排行信息
	repeated RankMsg ranklist = 2;
	// 我的排名
	optional RankMsg myrank = 3;
}

// 活动信息
message ActivityMsg{
	// 活动id
	optional string activityId = 1;
	// 开启时间
	optional int64 startTime = 2;
	// 结束时间
	optional int64 endTime = 3;
	//预热时间戳(curTime>= prewarn && curTime<startTime)
	optional int64 prewarmTime = 4;
	//上一次参加活动的时间戳
	optional int64 lastEnterTime = 5;
	// 结算时间
	optional int64 rankEndTime = 6;
}

// 结束的活动
message EndActivityMsg {
	// 活动id
	optional string activityId = 1;
	// 活动类型
	optional int32 type = 2;
	// 奖励状态 0: 没有奖励 1:有奖励
	optional int32 rewardState = 3;
	// 评价状态 1: 已评价 0:未评价
	optional int32 evaluate = 4;
}

// 排行榜奖励信息
message RankRewardMsg {
	// 类型 1:龙PVE活动比赛排行榜 2:龙PVE活动世界排行榜
	optional int32 ranktype = 1;
	// 名次
	optional int32 index = 2;
	// 奖励
	repeated ItemMsg rewards = 3;
}

// 周赛活动历史积分
message HistoryScoreMsg {
	// ID
	optional string activityId = 1;
	// 分数
	optional int32 score = 2;
}

// 活动列表请求
message ActivityListRequest {

}

// 活动列表响应
message ActivityListResponse {
	// 活动信息
	repeated ActivityMsg activities = 1;
	//预热活动信息
	repeated ActivityMsg warmActivities = 2;
	// 结束的活动 用于发奖
	repeated EndActivityMsg endActivities = 3;
}

// 活动倒计时结束请求
message ActivityCountdownOverRequest {
	// 活动id
	optional string activityId = 1;
}

// 活动倒计时结束响应
message ActivityCountdownOverResponse {

}

// 排行榜请求
message ActivityRankRequest {
	// 活动id
	optional string activityId = 1;
}

// 排行榜响应
message ActivityRankResponse {
	// 排行榜
	repeated RankListMsg ranks = 1;
	// 马拉松活动 本公会历史周赛积分
	repeated HistoryScoreMsg history = 2;
}