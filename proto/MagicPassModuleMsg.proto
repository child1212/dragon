syntax = "proto2";
package com.common.msg;

import "ItemModuleMsg.proto";

enum MagicPassModuleMsgSubCommand {
	//*****************************法师通行证活动开始[12081 - 12100]*****************************
	//请求法师通行证信息 此请求开启符合条件的活动并返回活动最新信息
	MAGICPASSMODULEMSG_SUB_MAGICPASSPORTINFO = 12081;
	//领取法师通行证奖励
	MAGICPASSMODULEMSG_SUB_MAGICPASSPORTAWARD = 12082;
	//活动结束一段时间内可以请求领取所有奖励
	MAGICPASSMODULEMSG_SUB_MAGICPASSPORTAWARDALL = 12083;
}


//*************************法师通行证活动开始***************************

// 通行证活动已修改为联网活动  玩家手动开启活动 服务器和客户端自己计算结束时间

// 法师通行证信息请求（此请求开启符合条件的活动并返回活动最新信息）
message MagicPassportInfoRequest {
	
}

// 法师通行证信息响应
message MagicPassportInfoResponse {
	optional int32 lastId = 1; // 上次开启的法师通行证ID
	optional int64 lastEndTime = 2; // 上次开启的法师通行证结束时间ms
	optional int32 lastHasAllAward = 3; // 上次获取了所有奖励(包括普通奖励和付费奖励 用来计算cd时间)  0 没有 1 已获取
	required int32 curId = 4; // 当前开启法师通行证ID
	required int64 curStartTime = 5; // 开始时间ms  如果为0 说明没有开启
	required int32 curStarNum = 6; // 当前星星数量
	required int32 hasPassport = 7;//本次是否购买了通行证  0 未购买 1 已购买
	repeated int32 nomalAwards= 8;// 普通奖励领取情况(只传递领取的taskId)
	repeated int32 advanceAwards= 9;// 高级奖励领取情况(只传递领取的taskId)
}

//领取法师通行证奖励
message MagicPassportAwardRequest {
	required int32  awardType= 1; // 1 普通奖励  2 高级奖励 （购买通行证后的奖励）
	required int32  progressId= 2;//进度id 值与策划配置保持一致
}

// 领取法师通行证奖励响应
message MagicPassportAwardResponse {
	
}

// 活动结束一段时间内可以领取所有奖励
message MagicPassportAwardAllRequest {
	repeated int32 nomalAll= 1;// 所有要领取普通奖励的taskId集合
	repeated int32 advanceAll= 2;// 所有要领取的高级奖励taskId集合
}

// 活动结束一段时间内可以领取所有奖励回复
message MagicPassportAwardAllResponse {
	repeated int32 nomalAll= 1;// 领取成功的普通奖励的taskId集合
	repeated int32 advanceAll= 2;// 领取成功的高级奖励taskId集合
}

//*************************法师通行证活动结束***************************